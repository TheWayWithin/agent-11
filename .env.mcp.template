# AGENT-11 MCP Environment Variables Template
# ============================================
# Copy this file to .env.mcp and fill in your actual API keys
# These variables are used by MCP profile configurations in .mcp-profiles/
#
# CRITICAL: Keep .env.mcp in .gitignore - never commit API keys!

# ============================================
# CORE MCPs (Required for all profiles)
# ============================================

# Context7 MCP - Documentation & Code Analysis
# Get your API key from: https://context7.io/dashboard
# Used in: core.json, fullstack.json
CONTEXT7_API_KEY=your_context7_key_here

# GitHub MCP - Repository Management & Version Control
# Create a token at: https://github.com/settings/tokens
# Required scopes: repo, workflow, write:packages, delete:packages
# Used in: core.json, fullstack.json
GITHUB_PERSONAL_ACCESS_TOKEN=your_github_token_here

# ============================================
# DATABASE MCPs (For database profiles)
# ============================================

# Supabase Staging Environment (Read/Write Access)
# Used by: database-staging.json profile
# Purpose: Safe environment for testing database changes before production
# Get from: https://app.supabase.com/project/_/settings/api
SUPABASE_STAGING_TOKEN=your_staging_token_here
SUPABASE_STAGING_REF=your_staging_project_ref_here

# Supabase Production Environment (Read-Only Access)
# Used by: database-production.json profile
# Purpose: Query production data safely without write permissions
# IMPORTANT: Use read-only tokens to prevent accidental modifications
# Get from: https://app.supabase.com/project/_/settings/api
SUPABASE_PRODUCTION_TOKEN=your_production_token_here
SUPABASE_PRODUCTION_REF=your_production_project_ref_here

# ============================================
# PAYMENTS MCP (For payments profile)
# ============================================

# Stripe MCP - Payment Processing
# Get from: https://dashboard.stripe.com/apikeys
# Use test keys (sk_test_) for development, live keys (sk_live_) for production
# Used in: payments.json, fullstack.json
STRIPE_API_KEY=your_stripe_key_here

# ============================================
# DEPLOYMENT MCPs (For deployment profile)
# ============================================

# Railway MCP - Backend Deployment & Infrastructure
# Get from: https://railway.app/account/tokens
# Used in: deployment.json, fullstack.json
RAILWAY_API_TOKEN=your_railway_token_here

# Netlify MCP - Frontend Deployment & Hosting
# Get from: https://app.netlify.com/user/applications#personal-access-tokens
# Used in: deployment.json, fullstack.json
NETLIFY_ACCESS_TOKEN=your_netlify_token_here

# ============================================
# OPTIONAL MCPs (Enhanced capabilities)
# ============================================

# Firecrawl MCP - Web Scraping & Research (Optional)
# Get your API key from: https://firecrawl.dev/dashboard
# Used for: Competitor analysis, market research, documentation scraping
FIRECRAWL_API_KEY=your_firecrawl_api_key_here

# Figma MCP - Design Integration (Optional)
# Get from: https://www.figma.com/developers/api#access-tokens
# Used for: Design file access, component extraction
FIGMA_ACCESS_TOKEN=your_figma_access_token_here
FIGMA_FILE_KEY=your_figma_file_key_here  # Optional - specific file to work with

# ============================================
# MCP Priority Levels & Profile Usage:
#
# CORE Profile (Required):
#   - Context7, GitHub, Firecrawl, Playwright
#   - Use for: Most development tasks
#
# TESTING Profile:
#   - Playwright (browser automation)
#   - Use for: QA and integration testing
#
# DATABASE Profiles:
#   - database-staging.json: Supabase with read/write
#   - database-production.json: Supabase read-only
#   - Use for: Database operations
#
# PAYMENTS Profile:
#   - Stripe API integration
#   - Use for: Payment feature development
#
# DEPLOYMENT Profile:
#   - Railway, Netlify
#   - Use for: DevOps and deployment tasks
#
# FULLSTACK Profile:
#   - All MCPs enabled
#   - Use for: Complex multi-system development
#
# See docs/MCP-PROFILES.md for detailed profile guide
# ============================================

# Quick Setup Commands:
# 1. Copy this template: cp .env.mcp.template .env.mcp
# 2. Fill in your API keys in .env.mcp
# 3. Run MCP setup: ./project/deployment/scripts/mcp-setup.sh
# 4. Verify connections: ./project/deployment/scripts/mcp-setup.sh --verify