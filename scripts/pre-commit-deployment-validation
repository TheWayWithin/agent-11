#!/bin/bash
#
# AGENT-11 Pre-Commit Hook: Deployment Validation
#
# Validates deployment consistency when install.sh or library agents are modified
# Run this from .git/hooks/pre-commit or via husky
#

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get the script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Check if relevant files were modified
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
VALIDATE_NEEDED=false

# Check if install.sh or library agents were modified
if echo "$STAGED_FILES" | grep -q "project/deployment/scripts/install.sh"; then
  VALIDATE_NEEDED=true
  echo -e "${YELLOW}‚ö† install.sh modified - running deployment validation${NC}"
fi

if echo "$STAGED_FILES" | grep -q "project/agents/specialists/.*\.md"; then
  VALIDATE_NEEDED=true
  echo -e "${YELLOW}‚ö† Library agents modified - running deployment validation${NC}"
fi

if echo "$STAGED_FILES" | grep -q "README.md"; then
  VALIDATE_NEEDED=true
  echo -e "${YELLOW}‚ö† README.md modified - running deployment validation${NC}"
fi

# Run validation if needed
if [ "$VALIDATE_NEEDED" = true ]; then
  echo ""
  echo "üîç Running deployment validation..."
  echo ""

  if node "$PROJECT_ROOT/scripts/validate-deployment.js"; then
    echo ""
    echo -e "${GREEN}‚úÖ Deployment validation passed - commit allowed${NC}"
    echo ""
    exit 0
  else
    echo ""
    echo -e "${RED}‚ùå Deployment validation failed - commit blocked${NC}"
    echo ""
    echo "Fix the validation errors before committing."
    echo "Run: node scripts/validate-deployment.js"
    echo ""
    exit 1
  fi
else
  # No relevant files modified, allow commit
  exit 0
fi
